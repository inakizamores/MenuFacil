name: Vercel Deployment Diagnostic

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  vercel-diagnostic:
    name: Vercel CLI Diagnostics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Vercel CLI
        run: npm install -g vercel
      
      - name: Vercel CLI Version
        run: vercel --version
      
      - name: Check frontend structure
        run: |
          echo "Frontend directory check:"
          ls -la frontend/
          echo "package.json contents:"
          cat frontend/package.json
          echo "Checking for vercel.json:"
          if [ -f "frontend/vercel.json" ]; then
            echo "vercel.json found:"
            cat frontend/vercel.json
          else
            echo "No vercel.json found"
          fi
      
      - name: Check Vercel token
        run: |
          if [ -n "$VERCEL_TOKEN" ]; then
            echo "VERCEL_TOKEN is set"
            # Test Vercel token without deployment
            echo "Testing Vercel authentication with token..."
            vercel --token=$VERCEL_TOKEN whoami || echo "Auth test failed"
          else
            echo "VERCEL_TOKEN is not set or empty"
            exit 1
          fi
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
      - name: Try Vercel project linking
        run: |
          cd frontend
          echo "Testing Vercel project linking..."
          vercel --token=$VERCEL_TOKEN link --yes || echo "Project linking test failed"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
      - name: Create minimal test file for deployment
        run: |
          cd frontend
          echo "Creating test deployment file..."
          mkdir -p public
          echo "<html><body>Test deployment from GitHub Actions</body></html>" > public/index.html
      
      - name: Attempt minimal deployment
        run: |
          cd frontend
          echo "Attempting minimal deployment without project dependencies..."
          vercel --token=$VERCEL_TOKEN deploy --name menufacil-test --prod --yes --debug
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} 