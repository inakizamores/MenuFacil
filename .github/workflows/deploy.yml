name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  debug:
    name: Debug Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: List directory structure
        run: |
          echo "GitHub Actions runner environment:"
          echo "-------------------------------------"
          echo "Runner OS: $RUNNER_OS"
          echo "GitHub Workspace: $GITHUB_WORKSPACE"
          echo "GitHub Event Name: $GITHUB_EVENT_NAME"
          echo "GitHub Actor: $GITHUB_ACTOR"
          echo "-------------------------------------"
          
          echo "Directory Structure:"
          ls -la
          
          echo "Repository files:"
          find . -type f -not -path "*/node_modules/*" -not -path "*/.git/*" | sort
      
      - name: Check frontend directory
        run: |
          echo "Frontend directory check:"
          if [ -d "frontend" ]; then
            echo "✅ Frontend directory exists"
            echo "Contents:"
            ls -la frontend/
            
            echo "Checking package.json:"
            if [ -f "frontend/package.json" ]; then
              echo "✅ package.json exists"
              cat frontend/package.json | grep -E "name|version"
            else
              echo "❌ package.json not found"
            fi
          else
            echo "❌ Frontend directory not found"
            exit 1
          fi
      
      - name: Check GitHub secrets availability
        run: |
          echo "Checking GitHub secrets:"
          echo "VERCEL_TOKEN availability: ${{ secrets.VERCEL_TOKEN != '' }}"
          echo "VERCEL_ORG_ID availability: ${{ secrets.VERCEL_ORG_ID != '' }}"
          echo "VERCEL_PROJECT_ID availability: ${{ secrets.VERCEL_PROJECT_ID != '' }}"
          echo "SUPABASE_SERVICE_ROLE_KEY availability: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY != '' }}"
      
      - name: Try Vercel deployment with minimal configuration
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./frontend 